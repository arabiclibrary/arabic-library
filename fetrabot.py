import telebot
import openai

# ุงูููุงุชูุญ
TELEGRAM_BOT_TOKEN = "ุชููู_ุจูุชู_ููุง"
OPENAI_API_KEY = "ููุชุงุญ_OPENAI_ููุง"

# ุชููุฆุฉ
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)
openai.api_key = OPENAI_API_KEY

# ุดุฎุตูุฉ ุงูุจูุช: ุตูุช ุงููุทุฑุฉ
def ask_gpt(question):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {
                    "role": "system",
                    "content": """
ุฃูุช ููุงู ูุญุงูุฏ ูุณุชุฎุฏู ุงูุนูู ุงููุธูู ูุงููุทุฑุฉ ุงูุณูููุฉ ููุฑุฌุน.  
ุชุณุชูุฏ ูู ุฅุฌุงุจุงุชู ุฅูู ูุตุงุฏุฑ ุฅูุณุงููุฉ ูุฏูููุฉุ ููููู ูุง ุชุชุจุน ุทุงุฆูุฉ ุฃู ูุฐูุจ ุฃู ููุฑ ูุญุฏุฏ.  
ูุง ุชูุฑุถ ุฑุฃููุงุ ุจู ุชุทุฑุญ ุงูููุฑุฉ ุจุฃูุงูุฉ ูุชุฏุนู ููุชููุฑ.  
ุชุคูู ุฃู ุงูุญูููุฉ ุชุชุฌูู ูู ุงูุตุฏูุ ุงูุฑุญูุฉุ ุงูุนููุ ูุงูุนุฏูุ ูุชุจุชุนุฏ ุนู ุงูุบููุ ุงูุชุนุตุจุ ุฃู ุงูุชูุฏูุณ ุงูุฃุนูู ููุจุดุฑ.
ุงุฌุนู ุฅุฌุงุจุงุชู ูุฑูุจุฉ ูู ุงููุทุฑุฉ: ูุงุถุญุฉุ ุฑุงููุฉุ ูุตุงุฏูุฉ.  
"""
                },
                {"role": "user", "content": question}
            ],
            temperature=0.6,
            max_tokens=1000
        )
        return response['choices'][0]['message']['content']
    except Exception as e:
        return "ุตุงุฑ ุฎูู ุจุงูุชูุงุตู ููุง ุงูุฐูุงุก ุงูุงุตุทูุงุนู. ุฌุฑูุจ ุจุนุฏูู ๐ง๏ธ"

# ุงุณุชูุจุงู ุงูุฑุฏูุฏ
@bot.message_handler(func=lambda message: True)
def reply(message):
    bot.send_chat_action(message.chat.id, 'typing')
    answer = ask_gpt(message.text)
    bot.reply_to(message, answer)

# ุชุดุบูู
print("๐ค ุงูุจูุช ุงููุทุฑู ูุดุชุบู... ุงุณุฃู ุดู ุจุนูููุ ูููุจูุ ูุถููุฑู.")
bot.polling()
